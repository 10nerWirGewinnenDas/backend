// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
  provider   = "prisma-class-generator"
  output     = "../src/_gen/prisma"
  useSwagger = true
  dryRun     = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlackSpot {
  id          String    @id @default(cuid())
  name        String
  description String
  latitude    Float
  longitude   Float
  votes       Vote[]
  Comment     Comment[]
  finished    Boolean
  archived    Boolean
}

model Category {
  id   String @id @default(cuid())
  name String
  city String
}

model City {
  id             String         @id @default(cuid())
  name           String
  districts      CityDistrict[]
  topLeftLat     Float
  topLeftLng     Float
  bottomRightLat Float
  bottomRightLng Float
}

model CityDistrict {
  id             String          @id @default(cuid())
  city           City            @relation(fields: [cityId], references: [id])
  cityId         String
  plzCodes       String[]
  subjectOffices SubjectOffice[]
}

model SubjectOffice {
  id         String       @id @default(cuid())
  name       String
  district   CityDistrict @relation(fields: [districtId], references: [id])
  districtId String
}

enum SpotActionType {
  CREATED
  TRANSFERRED
  FINNISHED
}

model Vote {
  id        String    @id @default(cuid())
  type      VoteType
  spot      BlackSpot @relation(fields: [spotId], references: [id])
  spotId    String
  createdAt DateTime  @default(now())
  voterId   String    @default(uuid())
}

enum VoteType {
  UP
  DOWN
}

model Comment {
  id         String    @id @default(cuid())
  authorName String?
  spot       BlackSpot @relation(fields: [spotId], references: [id])
  spotId     String
  createdAt  DateTime  @default(now())
}
